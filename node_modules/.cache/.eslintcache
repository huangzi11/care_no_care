[{"/Users/a123/Documents/info442/care_no_care/src/index.js":"1","/Users/a123/Documents/info442/care_no_care/src/App.js":"2","/Users/a123/Documents/info442/care_no_care/src/pages/LogOut.js":"3","/Users/a123/Documents/info442/care_no_care/src/pages/RankPage.js":"4","/Users/a123/Documents/info442/care_no_care/src/pages/CommunityDetail.js":"5","/Users/a123/Documents/info442/care_no_care/src/pages/SignIn.js":"6","/Users/a123/Documents/info442/care_no_care/src/components/footer.js":"7","/Users/a123/Documents/info442/care_no_care/src/components/header.js":"8","/Users/a123/Documents/info442/care_no_care/src/pages/Chat.js":"9","/Users/a123/Documents/info442/care_no_care/src/pages/HomeCard.js":"10","/Users/a123/Documents/info442/care_no_care/src/pages/ChatDetail.js":"11"},{"size":1065,"mtime":1709715997039,"results":"12","hashOfConfig":"13"},{"size":4722,"mtime":1709715809524,"results":"14","hashOfConfig":"13"},{"size":983,"mtime":1709715997040,"results":"15","hashOfConfig":"13"},{"size":2679,"mtime":1709715997041,"results":"16","hashOfConfig":"13"},{"size":3875,"mtime":1709714534899,"results":"17","hashOfConfig":"13"},{"size":1925,"mtime":1709715997041,"results":"18","hashOfConfig":"13"},{"size":159,"mtime":1709715997020,"results":"19","hashOfConfig":"13"},{"size":1905,"mtime":1709701179190,"results":"20","hashOfConfig":"13"},{"size":1388,"mtime":1709716864424,"results":"21","hashOfConfig":"13"},{"size":3366,"mtime":1709714133378,"results":"22","hashOfConfig":"13"},{"size":3330,"mtime":1709715899032,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"escauo",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/a123/Documents/info442/care_no_care/src/index.js",["63"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport info_data from \"./data/info_data.json\";\nimport comment_data from \"./data/comment_data.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n// Firebase\nimport { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDMQ4x0A-_Dq9hHYzPS6Y-qXIgS1APo7z4\",\n  authDomain: \"info442-wi24.firebaseapp.com\",\n  databaseURL: \"https://info442-wi24-default-rtdb.firebaseio.com\",\n  projectId: \"info442-wi24\",\n  storageBucket: \"info442-wi24.appspot.com\",\n  messagingSenderId: \"230580287778\",\n  appId: \"1:230580287778:web:4df8d21892121f2f97cd7b\",\n  measurementId: \"G-BEC24YCWRZ\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <BrowserRouter>\n    <App info_data={info_data} comment_data={comment_data} />\n  </BrowserRouter>\n);\n","/Users/a123/Documents/info442/care_no_care/src/App.js",["64","65","66","67","68"],[],"import React, { useState, useEffect } from \"react\";\nimport { AllCards } from \"./pages/HomeCard.js\";\nimport { CommunityPage } from \"./pages/Chat.js\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport LoginPage from \"./pages/SignIn\";\nimport { getAuth } from \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport LogOutModal from \"./pages/LogOut.js\";\nimport CommunityDetail from \"./pages/CommunityDetail\";\nimport ComparisonTable from \"./pages/RankPage.js\";\nimport ChatDetail from \"./pages/ChatDetail.js\";\n\nconst App = (props) => {\n  // Initialize infoData and order states\n  const [order, setOrder] = useState(props.info_data);\n\n  const applySort = (value) => {\n    if (value === \"\") {\n      setOrder(_.sortBy(order, [\"id\"]));\n    }\n  };\n\n  // Because all option are in the category and different option will have different filter ways,\n  // I need to use if here but revise the hardcoding for filterOptions\n  const applyFilters = (e) => {\n    let filteredData = infoData.filter((info) => {\n      for (const [key, value] of Object.entries(filterOptions)) {\n        if (value) {\n          if (\n            key === \"Student Organization\" &&\n            !info.category.includes(\"Student Organization\")\n          ) {\n            return false;\n          }\n          if (key === \"Election\" && !info.category.includes(\"Election\")) {\n            return false;\n          } else if (\n            key === \"Scholarships\" &&\n            !info.category.includes(\"Scholarships\")\n          ) {\n            return false;\n          } else if (\n            key === \"Diversity\" &&\n            !info.category.includes(\"Diversity\")\n          ) {\n            return false;\n          } else if (\n            key === \"Industry\" &&\n            !info.category.includes(\"Industry\")\n          ) {\n            return false;\n          } else if (\n            key === \"Career Opportunities\" &&\n            !info.category.includes(\"Career Opportunities\")\n          ) {\n            return false;\n          } else if (\n            key === \"Panel Talk\" &&\n            !info.category.includes(\"Panel Talk\")\n          ) {\n            return false;\n          }\n        }\n      }\n      return true;\n    });\n    setOrder(filteredData);\n  };\n  const [filterOptions, setFilterOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"filterOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : {};\n  });\n\n  const [infoData, setInfoData] = useState(() => {\n    const savedInfoData = localStorage.getItem(\"infoData\");\n    return savedInfoData ? JSON.parse(savedInfoData) : props.info_data; // Fallback to props.info_data if nothing is saved\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"filterOptions\", JSON.stringify(filterOptions));\n    // Consider efficiency and necessity before persisting infoData\n    // localStorage.setItem('infoData', JSON.stringify(infoData));\n  }, [filterOptions, infoData]);\n\n  useEffect(() => {\n    applyFilters(); // Call a function that applies filters based on filterOptions to info_data\n  }, []);\n\n  const getFilterOptions = () => filterOptions;\n  const handleCheckbox = (event) => {\n    const { name, checked } = event.target;\n    setFilterOptions((prev) => ({ ...prev, [name]: checked }));\n  };\n  // User authentication state\n  const [user, loading] = useAuthState(getAuth());\n  const currentUser = user;\n\n  // Log out modal state\n  const [showLogOut, setShowLogOut] = useState(false);\n\n  return (\n    <div className=\"background\">\n      <Header user={currentUser} loading={loading} showLogOut={setShowLogOut} />\n      <LogOutModal show={showLogOut} setShowLogOut={setShowLogOut} />\n      <Routes>\n        <Route path=\"/homepage\" element={<AllCards data={order} />} />\n        <Route\n          path=\"/trending\"\n          element={<ComparisonTable info_data={infoData} />}\n        />\n        <Route\n          path=\"/community/:infoName\"\n          element={\n            <CommunityDetail\n              info_data={props.info_data}\n              comment_data={props.comment_data}\n              username={user ? user.displayName : \"Anonymous\"}\n            />\n          }\n        />\n        <Route path=\"/chat\" element={<CommunityPage />} />\n        <Route path=\"/chat/:infoName\" element={<ChatDetail info_data={props.info_data} comment_data={props.comment_data} username={props.username} />} />\n        <Route\n          path=\"/signin\"\n          element={<LoginPage user={currentUser} loading={loading} />}\n        />\n        <Route path=\"*\" element={<Navigate to=\"/homepage\" />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/a123/Documents/info442/care_no_care/src/pages/LogOut.js",[],[],"/Users/a123/Documents/info442/care_no_care/src/pages/RankPage.js",[],[],"/Users/a123/Documents/info442/care_no_care/src/pages/CommunityDetail.js",["69","70","71"],[],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Image, Form } from 'react-bootstrap';\nimport { useParams, useNavigate } from 'react-router-dom'; // Import useNavigate\n\nexport default function CommunityDetail({ info_data}) {\n  let navigate = useNavigate();\n  let { infoName } = useParams();\n  const [info, setInfo] = useState({});\n  const [isCared, setIsCared] = useState(false);\n\n  // Initialize component with data from localStorage\n  useEffect(() => {\n    const foundInfo = info_data.find(info => info.name === infoName);\n    if (foundInfo) {\n      setInfo(foundInfo);\n      // Check if there's a cared state stored in localStorage\n      const caredState = localStorage.getItem(`cared-${infoName}`);\n      setIsCared(caredState === 'true' ? true : foundInfo.cared ?? false);\n    }\n  }, [infoName, info_data]);\n\n  const handleGoBack = () => {\n    navigate('/homepage'); // Navigate to the homepage\n  };\n  const handleJoinGroupChat = () => {\n    // Retrieve existing names from localStorage, or initialize an empty array if none exist\n    const existingNames = JSON.parse(localStorage.getItem('groupChatInterests')) || [];\n  \n    // Check if the current info.name is already in the array to avoid duplicates\n    if (!existingNames.includes(info.name)) {\n      const updatedNames = [...existingNames, info.name];\n      localStorage.setItem('groupChatInterests', JSON.stringify(updatedNames));\n    }\n  \n    navigate('/chat');\n  };\n  \n  let { detailName } = useParams();\n\n    const [details_data, setdetails_data] = useState([]);\n    const [detail, setdetail] = useState({});\n\n    useEffect(() => {\n        fetch('/data/info_data.json')\n        .then((response) => response.json())\n        .then((data) => setdetails_data(data))\n    }, []); \n\n    useEffect(() => {\n        if (details_data.length) {\n            const founddetail = details_data.find(r => r.name === detailName);\n            setdetail(founddetail);\n        }\n    }, [details_data, detailName]);\n\n  // Adjusted styling for Card.Body to include a fixed height and make it scrollable\n  const cardBodyStyle = {\n    width: '50%',\n    position: 'relative',\n    height: '600px',\n    maxHeight: '100%',\n    overflowY: 'auto' \n  };\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-around', height: '100vh'}}>\n      \n      <Card className=\"m-auto\" style={{maxWidth: '90%'}}>\n        <div className=\"d-flex\">\n          <Card.Img \n            variant=\"top\" \n            src={info.Picture_link}\n            style={{width: '50%', objectFit: 'cover'}}\n            alt={`picture of the info ${info.name}`}\n          />\n          <Card.Body style={cardBodyStyle}>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <Card.Title>{info.name}</Card.Title>\n              <Button \n                variant=\"light\" \n                style={{margin: '10px', alignSelf: 'flex-start'}} \n                onClick={handleGoBack}\n              >\n                Close\n              </Button>\n\n            </div>\n            <div className=\"d-flex align-items-center mb-2\">\n              <Image src={info.user_image} roundedCircle style={{width: '20px', height: '20px', marginRight: '10px'}} alt={`picture of the user ${info.user_name}`}/>\n              <div>{info.user_name}</div>\n            </div>\n            <Card.Text>\n              {info.descr}\n            </Card.Text>\n            <small className=\"text-muted\">{info.publish_time}</small>\n            <Button\n              className=\"questions\"\n              style={{ backgroundColor: 'lightblue',borderColor: \"black\", color: 'black', margin: '10px', alignSelf: 'flex-start' }}\n              onClick={handleJoinGroupChat}\n            >\n              Have Question? Join Group Chat!\n            </Button>\n          </Card.Body>\n        </div>\n      </Card>\n    </div>\n  );\n}","/Users/a123/Documents/info442/care_no_care/src/pages/SignIn.js",["72"],[],"import React, { useState } from \"react\";\nimport { getAuth, EmailAuthProvider } from \"firebase/auth\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { Navigate } from \"react-router-dom\";\n\nconst firebaseUIConfig = {\n  signInOptions: [\n    { provider: EmailAuthProvider.PROVIDER_ID, requiredDisplayName: true },\n  ],\n  signInFlow: \"popup\",\n  credentialHelper: \"none\",\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\nexport default function LoginPage(props) {\n  const auth = getAuth(); // Corrected from getPardon to getAuth\n\n  const [email, setEmail] = useState(\"\");\n  const [proceed, setProceed] = useState(false);\n\n  if (props.user) {\n    return <Navigate to=\"/home\" />;\n  }\n\n  let loadingOrLoggedIn = false;\n  if (props.user || props.loading) {\n    loadingOrLoggedIn = true;\n  }\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email.endsWith(\"@uw.edu\")) {\n      setProceed(true);\n    } else {\n      alert(\"Please use an email ending with @uw.edu.\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      {!loadingOrLoggedIn && !proceed && (\n        <div className=\"login-box\">\n          <div className=\"login-text\">\n            <h1 className=\"signInTitle\">Login to continue</h1>\n            <p>\n              Please enter your uw email\n            </p>\n          </div>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              placeholder=\"Enter your @uw.edu email\"\n              required\n            />\n            <button type=\"submit\">Proceed</button>\n          </form>\n        </div>\n      )}\n      {proceed && (\n        <StyledFirebaseAuth\n          uiConfig={firebaseUIConfig}\n          firebaseAuth={getAuth()}\n        />\n      )}\n    </div>\n  );\n}","/Users/a123/Documents/info442/care_no_care/src/components/footer.js",[],[],"/Users/a123/Documents/info442/care_no_care/src/components/header.js",[],[],"/Users/a123/Documents/info442/care_no_care/src/pages/Chat.js",[],[],"/Users/a123/Documents/info442/care_no_care/src/pages/HomeCard.js",["73","74","75"],[],"import React, { useState } from \"react\";\nimport { Card, Button, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction EachCard({ card, onRemoveCard }) {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleCareClick = (event) => {\n    event.stopPropagation(); // Prevent the card flip on the entire card click\n    navigate(`/community/${card.name}`);\n  };\n\n  let combinedBadge = card.category.split(\", \");\n  let allBadges = combinedBadge.map((badge) => (\n    <span key={badge} className=\"badge rounded-pill bg-light text-dark\">\n      {badge}\n    </span>\n  ));\n  const navigate = useNavigate();\n  const handleDontCareClick = (event) => {\n    event.stopPropagation(); // Prevent any parent click handlers from being executed\n    onRemoveCard(); // Existing functionality to remove card from view\n  };\n  return (\n    <div className={\"card-containe\"}>\n      <Card className=\"CommunityCard\">\n            <Card.Img\n              src={card.Picture_link}\n              style={{ height: \"400px\", width: \"100%\", objectFit: \"contain\" }}\n              alt={`picture of the info ${card.name}`}\n            />\n            <Card.Body>\n              <Card.Title>{card.name}</Card.Title>\n              <Card.Text>{card.comment}</Card.Text>\n              <div>{allBadges}</div>\n              \n            </Card.Body>\n            <Card.Footer\n              className=\"text-muted\"\n              style={{ backgroundColor: \"white\", border: \"none\" }}\n            >\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Image\n                  src={card.user_image}\n                  roundedCircle\n                  style={{ width: \"20px\", height: \"20px\", marginRight: \"10px\" }}\n                  alt={`picture of the user ${card.user_name}`}\n                />\n                <div>{card.user_name}</div>\n              </div>\n            </Card.Footer>\n            {/* Care button */}\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              {/* Existing Care button */}\n              <Button variant=\"warning\" onClick={handleCareClick} className=\"w-100\">\n                Care\n              </Button>\n              {/* New Don't Care button */}\n              <Button variant=\"secondary\" onClick={handleDontCareClick} className=\"w-100 ml-2\">\n                Don't Care\n              </Button>\n            </div>\n        </Card>\n    </div>\n  );\n}\n\n\n\nexport function AllCards({ data }) {\n  const [cards, setCards] = useState(data);\n\n  const removeCard = (cardName) => {\n    setCards(cards.filter(card => card.name !== cardName));\n  };\n\n  let cardList = cards.map((info) => (\n    <div className=\"col-md-4\" key={info.name}>\n      <EachCard card={info} onRemoveCard={() => removeCard(info.name)} />\n    </div>\n  ));\n\n\n  return (\n    <section className=\"products-list\">\n      <header className=\"rank-header\">\n        <h1>Your Most Cared INFO</h1>\n        <p>Based on your QUIZ</p>\n      </header>\n      <div className=\"container\">\n        <div className=\"row\">\n          {cardList}\n          {cardList.length < 1 && (\n            <h2 className=\"sorry\">\n              Sorry, there are no info to display with your filters. Please try\n              again.\n            </h2>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n","/Users/a123/Documents/info442/care_no_care/src/pages/ChatDetail.js",["76","77","78","79"],[],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Image, Form } from 'react-bootstrap';\nimport { useParams, useNavigate } from 'react-router-dom'; // Import useNavigate\n\nexport default function ChatDetail({info_data, comment_data, username}) {\n  let navigate = useNavigate();\n  let { infoName } = useParams();\n  const [info, setInfo] = useState({});\n  const [isCared, setIsCared] = useState(false);\n\n  const handleGoBack = () => {\n    navigate('/chat'); // Navigate to the homepage\n  };\n  useEffect(() => {\n    // Assuming info_data is an array of objects where each object has a name property\n    const foundInfo = info_data.find(info => info.name === infoName);\n    if (foundInfo) {\n      setInfo(foundInfo);\n    }\n  }, [infoName, info_data]);\n  let { detailName } = useParams();\n\n    const [details_data, setdetails_data] = useState([]);\n    const [detail, setdetail] = useState({});\n\n    useEffect(() => {\n        fetch('/data/info_data.json')\n        .then((response) => response.json())\n        .then((data) => setdetails_data(data))\n    }, []); \n\n    useEffect(() => {\n        if (details_data.length) {\n            const founddetail = details_data.find(r => r.name === detailName);\n            setdetail(founddetail);\n        }\n    }, [details_data, detailName]);\n\n    // prepare the comment data\n\n    const [comments, setComments] = React.useState(() => {\n        const existingList = localStorage.getItem('commentList');\n        return existingList ? JSON.parse(existingList) : comment_data;\n    });\n    const [comment, setComment] = React.useState('');\n    \n    useEffect(() => {\n        localStorage.setItem('commentList', JSON.stringify(comments));\n    }, [comments]);\n\n    // prepare the comment form\n    const submitComment = (e) => {\n        setComments([...comments, {name: detail.name, comment_user_name: username, comment_under: comment}]);\n        setComment('');\n    }\n\n    const changeComment = (e) => {\n        setComment(e.target.value);\n    }\n\n    const comment_list = comments.map((comment) => {\n        if (comment.name !== detail.name) {\n            return null\n        }\n        return (\n            <div key={comment.comment_under}>\n                <strong>{comment.comment_user_name}</strong>\n                <p>{comment.comment_under}</p>\n            </div>\n        )\n    })\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-around', height: '80vh', paddingTop: \"-5vh\"}}>\n      <Card className=\"m-auto\" style={{ maxWidth: '80%', width: '80%', height: \"70%\"}}>\n        <div className=\"d-flex\">\n          <Card.Body>\n          <Card.Title><h2>{info.name}</h2></Card.Title>\n            <div className='commentList' >\n                {comment_list}\n            </div>\n            <label htmlFor='comment_submit'>Message</label>\n            <div className='commentSection'>\n                <Form.Group className=\"commentForm mb-3\">\n                    <Form.Control type=\"comment_submit\" placeholder=\"Send Message\" value={comment} onChange={changeComment}/>\n                </Form.Group>\n                <Button className='commentButton' variant=\"primary\" type=\"submit\" onClick={submitComment}>\n                    Send\n                </Button>\n            </div>\n          </Card.Body>\n        </div>\n      </Card>\n    </div>\n  );\n}",{"ruleId":"80","severity":1,"message":"81","line":25,"column":7,"nodeType":"82","messageId":"83","endLine":25,"endColumn":10},{"ruleId":"80","severity":1,"message":"84","line":20,"column":9,"nodeType":"82","messageId":"83","endLine":20,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":77,"column":20,"nodeType":"82","messageId":"83","endLine":77,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":90,"column":6,"nodeType":"88","endLine":90,"endColumn":8,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"90","line":92,"column":9,"nodeType":"82","messageId":"83","endLine":92,"endColumn":25},{"ruleId":"80","severity":1,"message":"91","line":93,"column":9,"nodeType":"82","messageId":"83","endLine":93,"endColumn":23},{"ruleId":"80","severity":1,"message":"92","line":2,"column":31,"nodeType":"82","messageId":"83","endLine":2,"endColumn":35},{"ruleId":"80","severity":1,"message":"93","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":17},{"ruleId":"80","severity":1,"message":"94","line":41,"column":12,"nodeType":"82","messageId":"83","endLine":41,"endColumn":18},{"ruleId":"80","severity":1,"message":"95","line":18,"column":9,"nodeType":"82","messageId":"83","endLine":18,"endColumn":13},{"ruleId":"80","severity":1,"message":"96","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":19},{"ruleId":"80","severity":1,"message":"98","line":7,"column":21,"nodeType":"82","messageId":"83","endLine":7,"endColumn":33},{"ruleId":"80","severity":1,"message":"99","line":2,"column":24,"nodeType":"82","messageId":"83","endLine":2,"endColumn":29},{"ruleId":"80","severity":1,"message":"93","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":17},{"ruleId":"80","severity":1,"message":"100","line":9,"column":19,"nodeType":"82","messageId":"83","endLine":9,"endColumn":29},{"ruleId":"80","severity":1,"message":"101","line":11,"column":9,"nodeType":"82","messageId":"83","endLine":11,"endColumn":21},"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","'applySort' is assigned a value but never used.","'setInfoData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applyFilters'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'getFilterOptions' is assigned a value but never used.","'handleCheckbox' is assigned a value but never used.","'Form' is defined but never used.","'isCared' is assigned a value but never used.","'detail' is assigned a value but never used.","'auth' is assigned a value but never used.","'Link' is defined but never used.","'isFlipped' is assigned a value but never used.","'setIsFlipped' is assigned a value but never used.","'Image' is defined but never used.","'setIsCared' is assigned a value but never used.","'handleGoBack' is assigned a value but never used.",{"desc":"103","fix":"104"},"Update the dependencies array to be: [applyFilters]",{"range":"105","text":"106"},[3164,3166],"[applyFilters]"]